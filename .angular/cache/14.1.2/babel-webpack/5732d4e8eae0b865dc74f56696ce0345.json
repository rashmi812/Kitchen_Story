{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, Input, EventEmitter, Output, forwardRef, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nfunction StarRatingComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.labelText);\n  }\n}\n\nfunction StarRatingComponent_div_3_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"star-empty \", ctx_r3.classEmpty, \"\");\n  }\n}\n\nfunction StarRatingComponent_div_3_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"star-half \", ctx_r4.classHalf, \"\");\n  }\n}\n\nfunction StarRatingComponent_div_3_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"star-filled \", ctx_r5.classFilled, \"\");\n  }\n}\n\nfunction StarRatingComponent_div_3__svg_svg_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 10);\n    i0.ɵɵelement(1, \"use\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", ctx_r6.pathEmpty, null, \"xlink\");\n  }\n}\n\nfunction StarRatingComponent_div_3__svg_svg_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 12);\n    i0.ɵɵelement(1, \"use\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", ctx_r7.pathHalf, null, \"xlink\");\n  }\n}\n\nfunction StarRatingComponent_div_3__svg_svg_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 13);\n    i0.ɵɵelement(1, \"use\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", ctx_r8.pathFilled, null, \"xlink\");\n  }\n}\n\nfunction StarRatingComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"mouseenter\", function StarRatingComponent_div_3_Template_div_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const star_r2 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onStarHover(star_r2));\n    })(\"click\", function StarRatingComponent_div_3_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const star_r2 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onStarClicked(star_r2));\n    });\n    i0.ɵɵtemplate(1, StarRatingComponent_div_3_i_1_Template, 1, 3, \"i\", 6);\n    i0.ɵɵtemplate(2, StarRatingComponent_div_3_i_2_Template, 1, 3, \"i\", 6);\n    i0.ɵɵtemplate(3, StarRatingComponent_div_3_i_3_Template, 1, 3, \"i\", 6);\n    i0.ɵɵtemplate(4, StarRatingComponent_div_3__svg_svg_4_Template, 2, 1, \"svg\", 7);\n    i0.ɵɵtemplate(5, StarRatingComponent_div_3__svg_svg_5_Template, 2, 1, \"svg\", 8);\n    i0.ɵɵtemplate(6, StarRatingComponent_div_3__svg_svg_6_Template, 2, 1, \"svg\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.svgVisible());\n  }\n}\n\nfunction StarRatingControlComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.labelText);\n  }\n}\n\nfunction StarRatingControlComponent_div_3_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"star-empty \", ctx_r3.classEmpty, \"\");\n  }\n}\n\nfunction StarRatingControlComponent_div_3_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"star-half \", ctx_r4.classHalf, \"\");\n  }\n}\n\nfunction StarRatingControlComponent_div_3_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMapInterpolate1(\"star-filled \", ctx_r5.classFilled, \"\");\n  }\n}\n\nfunction StarRatingControlComponent_div_3__svg_svg_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 10);\n    i0.ɵɵelement(1, \"use\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", ctx_r6.pathEmpty, null, \"xlink\");\n  }\n}\n\nfunction StarRatingControlComponent_div_3__svg_svg_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 12);\n    i0.ɵɵelement(1, \"use\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", ctx_r7.pathHalf, null, \"xlink\");\n  }\n}\n\nfunction StarRatingControlComponent_div_3__svg_svg_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 13);\n    i0.ɵɵelement(1, \"use\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", ctx_r8.pathFilled, null, \"xlink\");\n  }\n}\n\nfunction StarRatingControlComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"mouseenter\", function StarRatingControlComponent_div_3_Template_div_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const star_r2 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onStarHover(star_r2));\n    })(\"click\", function StarRatingControlComponent_div_3_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const star_r2 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onStarClicked(star_r2));\n    });\n    i0.ɵɵtemplate(1, StarRatingControlComponent_div_3_i_1_Template, 1, 3, \"i\", 6);\n    i0.ɵɵtemplate(2, StarRatingControlComponent_div_3_i_2_Template, 1, 3, \"i\", 6);\n    i0.ɵɵtemplate(3, StarRatingControlComponent_div_3_i_3_Template, 1, 3, \"i\", 6);\n    i0.ɵɵtemplate(4, StarRatingControlComponent_div_3__svg_svg_4_Template, 2, 1, \"svg\", 7);\n    i0.ɵɵtemplate(5, StarRatingControlComponent_div_3__svg_svg_5_Template, 2, 1, \"svg\", 8);\n    i0.ɵɵtemplate(6, StarRatingControlComponent_div_3__svg_svg_6_Template, 2, 1, \"svg\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.svgVisible());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.svgVisible());\n  }\n}\n\nclass StarRatingConfig {}\n\nclass StarRatingUtils {\n  //Static methods\n  ///////////////////////////////////////////////////////////////////////////////////////////\n\n  /*\n   * getStarsArray\n   *\n   * returns an array of increasing numbers starting at 1\n   *\n   * @param numOfStars\n   * @returns {Array}\n   */\n  static getStarsArray(numOfStars) {\n    const stars = [];\n\n    for (let i = 0; i < numOfStars; i++) {\n      stars.push(i + 1);\n    }\n\n    return stars;\n  }\n  /*\n   * getHalfStarVisible\n   *\n   * Returns true if there should be a half star visible, and false if not.\n   *\n   * @param rating\n   * @returns {boolean}\n   */\n\n\n  static getHalfStarVisible(rating) {\n    return Math.abs(rating % 1) > 0;\n  }\n  /*\n   * getColor\n   *\n   * The default function for color calculation\n   * based on the current rating and the the number of stars possible.\n   * If a staticColor is set the function will use it as return value.\n   *\n   * @param rating\n   * @param numOfStars\n   * @param staticColor\n   * @returns {starRatingColor}\n   */\n\n\n  static getColor(rating, numOfStars, staticColor) {\n    rating = rating || 0; //if a fix color is set use this one\n\n    if (staticColor) {\n      return staticColor;\n    } //calculate size of smallest fraction\n\n\n    const fractionSize = numOfStars / 3; //apply color by fraction\n\n    let color = 'default';\n\n    if (rating > 0) {\n      color = 'negative';\n    }\n\n    if (rating > fractionSize) {\n      color = 'ok';\n    }\n\n    if (rating > fractionSize * 2) {\n      color = 'positive';\n    }\n\n    return color;\n  }\n  /*\n   * isDigitKeyEventCode\n   * detects digit key event sodes\n   * @param eventCode\n   * @returns {boolean}\n   */\n\n\n  static isDigitKeyEventCode(eventCode) {\n    return eventCode.indexOf('Digit') === 0;\n  }\n\n}\n/**\n * Configuration service for the StarRating component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the star ratings used in the application.\n */\n\n\nclass StarRatingConfigService {\n  constructor() {\n    this._classEmpty = 'default-star-empty-icon';\n    this._classHalf = 'default-star-half-icon';\n    this._classFilled = 'default-star-filled-icon';\n    this._numOfStars = 5;\n    this._size = 'medium';\n    this._labelPosition = 'left';\n    this._speed = 'noticeable';\n    this._starType = 'svg';\n    this._assetsPath = 'assets/images/';\n    this._svgPath = this.assetsPath + 'star-rating.icons.svg';\n    this._svgEmptySymbolId = 'star-empty';\n    this._svgHalfSymbolId = 'star-half';\n    this._svgFilledSymbolId = 'star-filled';\n    this._svgPathEmpty = this.svgPath + '#' + this.svgEmptySymbolId;\n    this._svgPathHalf = this.svgPath + '#' + this.svgHalfSymbolId;\n    this._svgPathFilled = this.svgPath + '#' + this.svgFilledSymbolId;\n  }\n\n  get classEmpty() {\n    return this._classEmpty;\n  }\n\n  set classEmpty(classEmpty) {\n    this._classEmpty = classEmpty;\n  }\n\n  get classHalf() {\n    return this._classHalf;\n  }\n\n  set classHalf(classHalf) {\n    this._classHalf = classHalf;\n  }\n\n  get classFilled() {\n    return this._classFilled;\n  }\n\n  set classFilled(classFilled) {\n    this._classFilled = classFilled;\n  }\n\n  get numOfStars() {\n    return this._numOfStars;\n  }\n\n  set numOfStars(numOfStars) {\n    this._numOfStars = numOfStars;\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  set size(size) {\n    this._size = size;\n  }\n\n  get staticColor() {\n    return this._staticColor;\n  }\n\n  set staticColor(value) {\n    this._staticColor = value;\n  }\n\n  get labelPosition() {\n    return this._labelPosition;\n  }\n\n  set labelPosition(labelPosition) {\n    this._labelPosition = labelPosition;\n  }\n\n  get speed() {\n    return this._speed;\n  }\n\n  set speed(speed) {\n    this._speed = speed;\n  }\n\n  get starType() {\n    return this._starType;\n  }\n\n  set starType(starType) {\n    this._starType = starType;\n  }\n\n  get assetsPath() {\n    return this._assetsPath;\n  }\n\n  set assetsPath(assetsPath) {\n    this._assetsPath = assetsPath;\n  }\n\n  get svgPath() {\n    return this._svgPath;\n  }\n\n  set svgPath(svgPath) {\n    this._svgPath = svgPath;\n  }\n\n  get svgEmptySymbolId() {\n    return this._svgEmptySymbolId;\n  }\n\n  set svgEmptySymbolId(svgEmptySymbolId) {\n    this._svgEmptySymbolId = svgEmptySymbolId;\n  }\n\n  get svgHalfSymbolId() {\n    return this._svgHalfSymbolId;\n  }\n\n  set svgHalfSymbolId(svgHalfSymbolId) {\n    this._svgHalfSymbolId = svgHalfSymbolId;\n  }\n\n  get svgFilledSymbolId() {\n    return this._svgFilledSymbolId;\n  }\n\n  set svgFilledSymbolId(svgFilledSymbolId) {\n    this._svgFilledSymbolId = svgFilledSymbolId;\n  }\n\n  get svgPathEmpty() {\n    return this._svgPathEmpty;\n  }\n\n  set svgPathEmpty(svgPathEmpty) {\n    this._svgPathEmpty = svgPathEmpty;\n  }\n\n  get svgPathHalf() {\n    return this._svgPathHalf;\n  }\n\n  set svgPathHalf(svgPathHalf) {\n    this._svgPathHalf = svgPathHalf;\n  }\n\n  get svgPathFilled() {\n    return this._svgPathFilled;\n  }\n\n  set svgPathFilled(svgPathFilled) {\n    this._svgPathFilled = svgPathFilled;\n  }\n\n  getColor(rating, numOfStars, staticColor) {\n    rating = rating || 0; // if a fix color is set use this one\n\n    if (staticColor) {\n      return staticColor;\n    } // calculate size of smallest fraction\n\n\n    const fractionSize = numOfStars / 3; // apply color by fraction\n\n    let color = 'default';\n\n    if (rating > 0) {\n      color = 'negative';\n    }\n\n    if (rating > fractionSize) {\n      color = 'ok';\n    }\n\n    if (rating > fractionSize * 2) {\n      color = 'positive';\n    }\n\n    return color;\n  }\n\n  getHalfStarVisible(rating) {\n    return Math.abs(rating % 1) > 0;\n  }\n\n}\n/* eslint-disable @angular-eslint/component-class-suffix */\n\n\nclass StarRating {\n  constructor(config) {\n    this.config = config; //set default ctrl props\n\n    this.classEmpty = this.config.classEmpty;\n    this.classHalf = this.config.classHalf;\n    this.classFilled = this.config.classFilled;\n    this.pathEmpty = this.config.svgPathEmpty;\n    this.pathHalf = this.config.svgPathHalf;\n    this.pathFilled = this.config.svgPathFilled; //set default Component Inputs\n\n    if ('getColor' in this.config && typeof this.config.getColor === 'function') {\n      this.getColor = this.config.getColor;\n    }\n\n    if ('getHalfStarVisible' in this.config && typeof this.config.getHalfStarVisible === 'function') {\n      this.getHalfStarVisible = this.config.getHalfStarVisible;\n    }\n\n    this.numOfStars = this.config.numOfStars;\n    this.rating = 0;\n    this.step = 1;\n  }\n\n  get showHalfStars() {\n    return this._showHalfStars;\n  }\n\n  set showHalfStars(value) {\n    this._showHalfStars = !!value; //update halfStarVisible\n\n    this.setHalfStarVisible();\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  set id(value) {\n    this._id = value || '';\n  }\n\n  get focus() {\n    return this._focus;\n  }\n\n  set focus(value) {\n    this._focus = !!value;\n  }\n\n  get labelText() {\n    return this._labelText;\n  }\n\n  set labelText(value) {\n    this._labelText = value;\n  }\n\n  get labelPosition() {\n    return this._labelPosition;\n  }\n\n  set labelPosition(value) {\n    this._labelPosition = value || this.config.labelPosition;\n  }\n\n  get labelVisible() {\n    return this._labelVisible;\n  }\n\n  set labelVisible(value) {\n    this._labelVisible = !!value;\n  }\n\n  get hoverEnabled() {\n    return this._hoverEnabled;\n  }\n\n  set hoverEnabled(value) {\n    this._hoverEnabled = value !== undefined ? !!value : false;\n  }\n\n  get staticColor() {\n    return this._staticColor || this.config.staticColor || undefined;\n  }\n\n  set staticColor(value) {\n    this._staticColor = value; //update color.\n\n    this.setColor();\n  }\n\n  get direction() {\n    return this._direction;\n  }\n\n  set direction(value) {\n    this._direction = value || undefined;\n  }\n\n  get numOfStars() {\n    return this._numOfStars;\n  }\n\n  set numOfStars(value) {\n    this._numOfStars = value > 0 ? value : this.config.numOfStars; //update stars array\n\n    this.stars = StarRatingUtils.getStarsArray(this.numOfStars); //update color\n\n    this.setColor();\n  }\n\n  get hoverRating() {\n    return this._hoverRating;\n  }\n\n  set hoverRating(value) {\n    this._hoverRating = value > 0 ? value : 0;\n  }\n\n  get speed() {\n    return this._speed;\n  }\n\n  set speed(value) {\n    this._speed = value || this.config.speed;\n  }\n\n  get size() {\n    return this._size || this.config.size;\n  }\n\n  set size(value) {\n    this._size = value;\n  }\n\n  get starType() {\n    return this._starType || this.config.starType;\n  }\n\n  set starType(value) {\n    this._starType = value;\n  }\n\n  get space() {\n    return this._space;\n  }\n\n  set space(value) {\n    this._space = value;\n  }\n\n  get readOnly() {\n    return this._readOnly;\n  }\n\n  set readOnly(value) {\n    this._readOnly = !!value;\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = !!value;\n  }\n\n  get step() {\n    return this._step;\n  }\n\n  set step(value) {\n    this._step = value > 0 ? value : 1;\n  }\n\n  get rating() {\n    return this._rating;\n  }\n\n  set rating(value) {\n    this.setRating(value);\n  }\n  /**\n   * setRating\n   * I use a setter function instead of a set method to enable overrides for this function.\n   * @param value\n   */\n\n\n  setRating(value) {\n    //validate and apply newRating\n    let newRating = 0;\n\n    if (value >= 0 && value <= this.numOfStars) {\n      newRating = value;\n    } //limit max value to max number of stars\n\n\n    if (value > this.numOfStars) {\n      newRating = this.numOfStars;\n    }\n\n    this._rating = newRating; //update ratingAsInteger. rating parsed to int for the value-[n] modifier\n\n    this.ratingAsInteger = parseInt(this._rating?.toString(), 10); //update halfStarsVisible\n\n    this.setHalfStarVisible(); //update calculated Color\n\n    this.setColor();\n  }\n\n  svgVisible() {\n    return this.starType === 'svg';\n  }\n\n  interactionPossible() {\n    return !this.readOnly && !this.disabled;\n  }\n\n  setColor(useHoverValue = false) {\n    //check if custom function is given\n    const ratingValue = useHoverValue ? this.hoverRating : this.rating;\n\n    if (typeof this.getColor === 'function') {\n      this.color = this.getColor(ratingValue, this.numOfStars, this.staticColor);\n    } else {\n      this.color = StarRatingUtils.getColor(ratingValue, this.numOfStars, this.staticColor);\n    }\n  }\n\n  setHalfStarVisible() {\n    //update halfStarVisible\n    if (this.showHalfStars) {\n      //check if custom function is given\n      if (typeof this.getHalfStarVisible === 'function') {\n        this.halfStarVisible = this.getHalfStarVisible(this.rating);\n      } else {\n        this.halfStarVisible = StarRatingUtils.getHalfStarVisible(this.rating);\n      }\n    } else {\n      this.halfStarVisible = false;\n    }\n  }\n\n  getComponentClassNames() {\n    const classNames = [];\n    classNames.push(this.rating ? 'value-' + this.ratingAsInteger : 'value-0');\n    classNames.push(this.halfStarVisible ? 'half' : '');\n    classNames.push(this.hoverEnabled ? 'hover' : '');\n    const hoverRating = this.hoverRating ? 'hover-' + this.hoverRating : 'hover-0';\n    classNames.push(this.hoverEnabled ? hoverRating : '');\n    classNames.push(this.space ? 'space-' + this.space : '');\n    classNames.push(this.labelPosition ? 'label-' + this.labelPosition : '');\n    classNames.push(this.color ? 'color-' + this.color : '');\n    classNames.push(this.starType ? 'star-' + this.starType : '');\n    classNames.push(this.speed);\n    classNames.push(this.size);\n    classNames.push(this.readOnly ? 'read-only' : '');\n    classNames.push(this.disabled ? 'disabled' : '');\n    classNames.push(this.direction ? 'direction-' + this.direction : '');\n    return classNames.join(' ');\n  }\n\n  increment() {\n    //increment to next higher step\n    const absDiff = Math.abs(this.rating % this.step);\n    this.rating = this.rating + (absDiff > 0 ? this.step - absDiff : this.step);\n  }\n\n  decrement() {\n    //decrement to next lower step\n    const absDiff = Math.abs(this.rating % this.step);\n    this.rating = this.rating - (absDiff > 0 ? absDiff : this.step);\n  }\n\n  reset() {\n    this.rating = 0;\n  }\n\n}\n\nStarRating.ɵfac = function StarRating_Factory(t) {\n  return new (t || StarRating)(i0.ɵɵdirectiveInject(StarRatingConfigService));\n};\n\nStarRating.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StarRating,\n  selectors: [[\"placeholder-star-rating\"]],\n  inputs: {\n    showHalfStars: \"showHalfStars\",\n    id: \"id\",\n    focus: \"focus\",\n    labelText: \"labelText\",\n    labelPosition: \"labelPosition\",\n    labelVisible: \"labelVisible\",\n    hoverEnabled: \"hoverEnabled\",\n    staticColor: \"staticColor\",\n    direction: \"direction\",\n    numOfStars: \"numOfStars\",\n    hoverRating: \"hoverRating\",\n    speed: \"speed\",\n    size: \"size\",\n    starType: \"starType\",\n    space: \"space\",\n    readOnly: \"readOnly\",\n    disabled: \"disabled\",\n    step: \"step\",\n    rating: \"rating\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function StarRating_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StarRating, [{\n    type: Component,\n    args: [{\n      // Metadata needed for Angular.\n      template: ``,\n      selector: 'placeholder-star-rating'\n    }]\n  }], function () {\n    return [{\n      type: StarRatingConfigService\n    }];\n  }, {\n    showHalfStars: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    focus: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    labelVisible: [{\n      type: Input\n    }],\n    hoverEnabled: [{\n      type: Input\n    }],\n    staticColor: [{\n      type: Input\n    }],\n    direction: [{\n      type: Input\n    }],\n    numOfStars: [{\n      type: Input\n    }],\n    hoverRating: [{\n      type: Input\n    }],\n    speed: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    starType: [{\n      type: Input\n    }],\n    space: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    rating: [{\n      type: Input\n    }]\n  });\n})();\n\nclass StarRatingComponent extends StarRating {\n  constructor(config) {\n    super(config);\n    this.starClickChange = new EventEmitter();\n    this.ratingChange = new EventEmitter();\n    this.hoverRatingChange = new EventEmitter();\n  }\n\n  saveOnClick($event) {\n    if (this.starClickChange) {\n      this.starClickChange.emit($event);\n    }\n  }\n\n  saveOnRatingChange($event) {\n    if (this.ratingChange) {\n      this.ratingChange.emit($event);\n    }\n  }\n\n  saveOnHover($event) {\n    if (this.hoverRatingChange) {\n      this.hoverRatingChange.emit($event);\n    }\n  }\n  /**ACCESSIBILITY **/\n  //Keyboard events\n\n\n  onKeyDown(event) {\n    if (!this.interactionPossible()) {\n      return;\n    }\n\n    const handlers = {\n      //Decrement\n      Minus: () => this.decrement(),\n      ArrowDown: () => this.decrement(),\n      ArrowLeft: () => this.decrement(),\n      //Increment\n      Plus: () => this.increment(),\n      ArrowRight: () => this.increment(),\n      ArrowUp: () => this.increment(),\n      //Reset\n      Backspace: () => this.reset(),\n      Delete: () => this.reset(),\n      Digit0: () => this.reset()\n    };\n\n    const handleDigits = eventCode => {\n      const dStr = 'Digit';\n      const digit = parseInt(eventCode.substr(dStr.length, eventCode.length - 1), 10);\n      this.rating = digit;\n    };\n\n    if (handlers[event['code']] || StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n      if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n        handleDigits(event['code']);\n      } else {\n        handlers[event['code']]();\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  } //Hover events\n\n\n  onStarHover(rating) {\n    if (!this.interactionPossible() || !this.hoverEnabled) {\n      return;\n    }\n\n    this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0; //update calculated Color\n\n    this.setColor(true); //fire onHoverRatingChange event\n\n    const $event = {\n      hoverRating: this.hoverRating\n    };\n    this.saveOnHover($event);\n  }\n\n  onStopHover() {\n    if (!this.interactionPossible() || !this.hoverEnabled) {\n      return;\n    }\n\n    this.hoverRating = 0; //update calculated Color\n\n    this.setColor();\n  } //Overrides\n\n\n  setRating(value) {\n    const initValue = this.rating;\n    super.setRating(value); //if value changed trigger valueAccessor events and outputs\n\n    if (initValue !== this.rating) {\n      const $event = {\n        rating: this.rating\n      };\n      this.saveOnRatingChange($event);\n    }\n  }\n  /**\n   * onStarClicked\n   *\n   * Is fired when a star is clicked. And updated the rating value.\n   * This function returns if the disabled or readOnly\n   * property is set. If provided it emits the onClick event\n   * handler with the actual rating value.\n   *\n   * @param rating\n   */\n\n\n  onStarClicked(rating) {\n    //fire onClick event\n    if (!this.interactionPossible()) {\n      return;\n    }\n\n    this.rating = rating;\n    const onClickEventObject = {\n      rating: this.rating\n    };\n    this.saveOnClick(onClickEventObject);\n  }\n\n}\n\nStarRatingComponent.ɵfac = function StarRatingComponent_Factory(t) {\n  return new (t || StarRatingComponent)(i0.ɵɵdirectiveInject(StarRatingConfigService));\n};\n\nStarRatingComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StarRatingComponent,\n  selectors: [[\"star-rating\"]],\n  inputs: {\n    getHalfStarVisible: \"getHalfStarVisible\",\n    getColor: \"getColor\"\n  },\n  outputs: {\n    starClickChange: \"starClickChange\",\n    ratingChange: \"ratingChange\",\n    hoverRatingChange: \"hoverRatingChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 6,\n  consts: [[\"tabindex\", \"0\", 3, \"id\", \"keydown\", \"mouseleave\"], [\"class\", \"label-value\", 4, \"ngIf\"], [1, \"star-container\"], [\"class\", \"star\", 3, \"mouseenter\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"label-value\"], [1, \"star\", 3, \"mouseenter\", \"click\"], [3, \"class\", 4, \"ngIf\"], [\"class\", \"star-empty\", 4, \"ngIf\"], [\"class\", \"star-half\", 4, \"ngIf\"], [\"class\", \"star-filled\", 4, \"ngIf\"], [1, \"star-empty\"], [0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\"], [1, \"star-half\"], [1, \"star-filled\"]],\n  template: function StarRatingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"keydown\", function StarRatingComponent_Template_div_keydown_0_listener($event) {\n        return ctx.onKeyDown($event);\n      })(\"mouseleave\", function StarRatingComponent_Template_div_mouseleave_0_listener() {\n        return ctx.onStopHover();\n      });\n      i0.ɵɵtemplate(1, StarRatingComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, StarRatingComponent_div_3_Template, 7, 6, \"div\", 3);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMapInterpolate1(\"rating \", ctx.getComponentClassNames(), \"\");\n      i0.ɵɵpropertyInterpolate(\"id\", ctx.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.labelText);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stars);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StarRatingComponent, [{\n    type: Component,\n    args: [{\n      selector: 'star-rating',\n      template: \"<div id=\\\"{{id}}\\\" class=\\\"rating {{getComponentClassNames()}}\\\" tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\" (mouseleave)=\\\"onStopHover()\\\">\\n  <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n  <div class=\\\"star-container\\\">\\n    <div class=\\\"star\\\" (mouseenter)=\\\"onStarHover(star)\\\"\\n      *ngFor=\\\"let star of stars\\\" (click)=\\\"onStarClicked(star)\\\">\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: StarRatingConfigService\n    }];\n  }, {\n    getHalfStarVisible: [{\n      type: Input\n    }],\n    getColor: [{\n      type: Input\n    }],\n    starClickChange: [{\n      type: Output\n    }],\n    ratingChange: [{\n      type: Output\n    }],\n    hoverRatingChange: [{\n      type: Output\n    }]\n  });\n})();\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n\nconst STAR_RATING_CONTROL_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => StarRatingControlComponent),\n  multi: true\n};\n\nclass StarRatingControlComponent extends StarRating {\n  constructor(config) {\n    super(config);\n    this.starClickChange = new EventEmitter();\n    this.ratingChange = new EventEmitter();\n    this.hoverRatingChange = new EventEmitter();\n    this.onModelChangeRegistered = false;\n    this.onTouchRegistered = false;\n  }\n\n  saveOnClick($event) {\n    if (this.starClickChange) {\n      this.starClickChange.emit($event);\n    }\n  }\n\n  saveOnRatingChange($event) {\n    if (this.ratingChange) {\n      this.ratingChange.emit($event);\n    }\n  }\n\n  saveOnHover($event) {\n    if (this.hoverRatingChange) {\n      this.hoverRatingChange.emit($event);\n    }\n  }\n\n  saveOnTouch() {\n    if (this.onTouchRegistered) {\n      this.onTouch();\n    }\n  }\n\n  saveOnModelChange(value) {\n    if (this.onModelChangeRegistered) {\n      this.onModelChange(value);\n    }\n  }\n  /**ACCESSIBILITY **/\n  //Keyboard events\n\n\n  onKeyDown(event) {\n    if (!this.interactionPossible()) {\n      return;\n    }\n\n    const handlers = {\n      //Decrement\n      Minus: () => this.decrement(),\n      ArrowDown: () => this.decrement(),\n      ArrowLeft: () => this.decrement(),\n      //Increment\n      Plus: () => this.increment(),\n      ArrowRight: () => this.increment(),\n      ArrowUp: () => this.increment(),\n      //Reset\n      Backspace: () => this.reset(),\n      Delete: () => this.reset(),\n      Digit0: () => this.reset()\n    };\n\n    const handleDigits = eventCode => {\n      const dStr = 'Digit';\n      const digit = parseInt(eventCode.substr(dStr.length, eventCode.length - 1), 10);\n      this.rating = digit;\n    };\n\n    if (handlers[event['code']] || StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n      if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n        handleDigits(event['code']);\n      } else {\n        handlers[event['code']]();\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.saveOnTouch();\n  } //Focus events\n\n\n  onBlur(event) {\n    this.focus = false;\n    event.preventDefault();\n    event.stopPropagation();\n    this.saveOnTouch();\n  }\n\n  onFocus(event) {\n    this.focus = true;\n    event.preventDefault();\n    event.stopPropagation();\n    this.saveOnTouch();\n  } //Hover events\n\n\n  onStarHover(rating) {\n    if (!this.interactionPossible() || !this.hoverEnabled) {\n      return;\n    }\n\n    this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0; //fire onHoverRatingChange event\n\n    const $event = {\n      hoverRating: this.hoverRating\n    };\n    this.saveOnHover($event);\n  }\n  /**Form Control - ControlValueAccessor implementation**/\n\n\n  writeValue(obj) {\n    this.rating = obj;\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n    this.onModelChangeRegistered = true;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouch = fn;\n    this.onTouchRegistered = true;\n  } //Overrides\n\n\n  setRating(value) {\n    const initValue = this.rating;\n    super.setRating(value); //if value changed trigger valueAccessor events and outputs\n\n    if (initValue !== this.rating) {\n      const $event = {\n        rating: this.rating\n      };\n      this.saveOnRatingChange($event);\n      this.saveOnModelChange(this.rating);\n    }\n  }\n  /**\n   * onStarClicked\n   *\n   * Is fired when a star is clicked. And updated the rating value.\n   * This function returns if the disabled or readOnly\n   * property is set. If provided it emits the onClick event\n   * handler with the actual rating value.\n   *\n   * @param rating\n   */\n\n\n  onStarClicked(rating) {\n    //fire onClick event\n    if (!this.interactionPossible()) {\n      return;\n    }\n\n    this.rating = rating;\n    const onClickEventObject = {\n      rating: this.rating\n    };\n    this.saveOnClick(onClickEventObject);\n  }\n\n}\n\nStarRatingControlComponent.ɵfac = function StarRatingControlComponent_Factory(t) {\n  return new (t || StarRatingControlComponent)(i0.ɵɵdirectiveInject(StarRatingConfigService));\n};\n\nStarRatingControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StarRatingControlComponent,\n  selectors: [[\"star-rating-control\"]],\n  outputs: {\n    starClickChange: \"starClickChange\",\n    ratingChange: \"ratingChange\",\n    hoverRatingChange: \"hoverRatingChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([STAR_RATING_CONTROL_ACCESSOR]), i0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 6,\n  consts: [[\"tabindex\", \"0\", 3, \"id\", \"keydown\", \"blur\", \"focus\", \"mouseleave\"], [\"class\", \"label-value\", 4, \"ngIf\"], [1, \"star-container\"], [\"class\", \"star\", 3, \"mouseenter\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"label-value\"], [1, \"star\", 3, \"mouseenter\", \"click\"], [3, \"class\", 4, \"ngIf\"], [\"class\", \"star-empty\", 4, \"ngIf\"], [\"class\", \"star-half\", 4, \"ngIf\"], [\"class\", \"star-filled\", 4, \"ngIf\"], [1, \"star-empty\"], [0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\"], [1, \"star-half\"], [1, \"star-filled\"]],\n  template: function StarRatingControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"keydown\", function StarRatingControlComponent_Template_div_keydown_0_listener($event) {\n        return ctx.onKeyDown($event);\n      })(\"blur\", function StarRatingControlComponent_Template_div_blur_0_listener($event) {\n        return ctx.onBlur($event);\n      })(\"focus\", function StarRatingControlComponent_Template_div_focus_0_listener($event) {\n        return ctx.onFocus($event);\n      })(\"mouseleave\", function StarRatingControlComponent_Template_div_mouseleave_0_listener() {\n        return ctx.onStarHover(0);\n      });\n      i0.ɵɵtemplate(1, StarRatingControlComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, StarRatingControlComponent_div_3_Template, 7, 6, \"div\", 3);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMapInterpolate1(\"rating \", ctx.getComponentClassNames(), \"\");\n      i0.ɵɵpropertyInterpolate(\"id\", ctx.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.labelText);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stars);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StarRatingControlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'star-rating-control',\n      providers: [STAR_RATING_CONTROL_ACCESSOR],\n      template: \"<div id=\\\"{{id}}\\\" class=\\\"rating {{getComponentClassNames()}}\\\" tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\" (blur)=\\\"onBlur($event)\\\"\\n  (focus)=\\\"onFocus($event)\\\" (mouseleave)=\\\"onStarHover(0)\\\">\\n  <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n  <div class=\\\"star-container\\\">\\n    <div class=\\\"star\\\" (mouseenter)=\\\"onStarHover(star)\\\"\\n      *ngFor=\\\"let star of stars\\\" (click)=\\\"onStarClicked(star)\\\">\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: StarRatingConfigService\n    }];\n  }, {\n    starClickChange: [{\n      type: Output\n    }],\n    ratingChange: [{\n      type: Output\n    }],\n    hoverRatingChange: [{\n      type: Output\n    }]\n  });\n})();\n\nconst DECLARATIONS = [StarRatingComponent, StarRatingControlComponent];\nconst EXPORTS = [DECLARATIONS];\n\nclass StarRatingModule {\n  static forRoot() {\n    return {\n      ngModule: StarRatingModule,\n      providers: [StarRatingConfigService]\n    };\n  }\n\n  static forChild() {\n    return {\n      ngModule: StarRatingModule,\n      providers: []\n    };\n  }\n\n}\n\nStarRatingModule.ɵfac = function StarRatingModule_Factory(t) {\n  return new (t || StarRatingModule)();\n};\n\nStarRatingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StarRatingModule\n});\nStarRatingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StarRatingModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [DECLARATIONS],\n      exports: [EXPORTS]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { StarRating, StarRatingComponent, StarRatingConfig, StarRatingConfigService, StarRatingControlComponent, StarRatingModule, StarRatingUtils };","map":{"version":3,"names":["i0","Component","Input","EventEmitter","Output","forwardRef","NgModule","i2","CommonModule","NG_VALUE_ACCESSOR","StarRatingConfig","StarRatingUtils","getStarsArray","numOfStars","stars","i","push","getHalfStarVisible","rating","Math","abs","getColor","staticColor","fractionSize","color","isDigitKeyEventCode","eventCode","indexOf","StarRatingConfigService","constructor","_classEmpty","_classHalf","_classFilled","_numOfStars","_size","_labelPosition","_speed","_starType","_assetsPath","_svgPath","assetsPath","_svgEmptySymbolId","_svgHalfSymbolId","_svgFilledSymbolId","_svgPathEmpty","svgPath","svgEmptySymbolId","_svgPathHalf","svgHalfSymbolId","_svgPathFilled","svgFilledSymbolId","classEmpty","classHalf","classFilled","size","_staticColor","value","labelPosition","speed","starType","svgPathEmpty","svgPathHalf","svgPathFilled","StarRating","config","pathEmpty","pathHalf","pathFilled","step","showHalfStars","_showHalfStars","setHalfStarVisible","id","_id","focus","_focus","labelText","_labelText","labelVisible","_labelVisible","hoverEnabled","_hoverEnabled","undefined","setColor","direction","_direction","hoverRating","_hoverRating","space","_space","readOnly","_readOnly","disabled","_disabled","_step","_rating","setRating","newRating","ratingAsInteger","parseInt","toString","svgVisible","interactionPossible","useHoverValue","ratingValue","halfStarVisible","getComponentClassNames","classNames","join","increment","absDiff","decrement","reset","ɵfac","ɵcmp","type","args","template","selector","StarRatingComponent","starClickChange","ratingChange","hoverRatingChange","saveOnClick","$event","emit","saveOnRatingChange","saveOnHover","onKeyDown","event","handlers","Minus","ArrowDown","ArrowLeft","Plus","ArrowRight","ArrowUp","Backspace","Delete","Digit0","handleDigits","dStr","digit","substr","length","preventDefault","stopPropagation","onStarHover","onStopHover","initValue","onStarClicked","onClickEventObject","NgForOf","NgIf","STAR_RATING_CONTROL_ACCESSOR","provide","useExisting","StarRatingControlComponent","multi","onModelChangeRegistered","onTouchRegistered","saveOnTouch","onTouch","saveOnModelChange","onModelChange","onBlur","onFocus","writeValue","obj","registerOnChange","fn","registerOnTouched","providers","DECLARATIONS","EXPORTS","StarRatingModule","forRoot","ngModule","forChild","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/hcl/Phase4Angular/Phase 4 Project - Kitchen Story/node_modules/angular-star-rating/fesm2020/angular-star-rating.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, Input, EventEmitter, Output, forwardRef, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nclass StarRatingConfig {\n}\n\nclass StarRatingUtils {\n    //Static methods\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    /*\n     * getStarsArray\n     *\n     * returns an array of increasing numbers starting at 1\n     *\n     * @param numOfStars\n     * @returns {Array}\n     */\n    static getStarsArray(numOfStars) {\n        const stars = [];\n        for (let i = 0; i < numOfStars; i++) {\n            stars.push(i + 1);\n        }\n        return stars;\n    }\n    /*\n     * getHalfStarVisible\n     *\n     * Returns true if there should be a half star visible, and false if not.\n     *\n     * @param rating\n     * @returns {boolean}\n     */\n    static getHalfStarVisible(rating) {\n        return Math.abs(rating % 1) > 0;\n    }\n    /*\n     * getColor\n     *\n     * The default function for color calculation\n     * based on the current rating and the the number of stars possible.\n     * If a staticColor is set the function will use it as return value.\n     *\n     * @param rating\n     * @param numOfStars\n     * @param staticColor\n     * @returns {starRatingColor}\n     */\n    static getColor(rating, numOfStars, staticColor) {\n        rating = rating || 0;\n        //if a fix color is set use this one\n        if (staticColor) {\n            return staticColor;\n        }\n        //calculate size of smallest fraction\n        const fractionSize = numOfStars / 3;\n        //apply color by fraction\n        let color = 'default';\n        if (rating > 0) {\n            color = 'negative';\n        }\n        if (rating > fractionSize) {\n            color = 'ok';\n        }\n        if (rating > fractionSize * 2) {\n            color = 'positive';\n        }\n        return color;\n    }\n    /*\n     * isDigitKeyEventCode\n     * detects digit key event sodes\n     * @param eventCode\n     * @returns {boolean}\n     */\n    static isDigitKeyEventCode(eventCode) {\n        return eventCode.indexOf('Digit') === 0;\n    }\n}\n\n/**\n * Configuration service for the StarRating component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the star ratings used in the application.\n */\nclass StarRatingConfigService {\n    constructor() {\n        this._classEmpty = 'default-star-empty-icon';\n        this._classHalf = 'default-star-half-icon';\n        this._classFilled = 'default-star-filled-icon';\n        this._numOfStars = 5;\n        this._size = 'medium';\n        this._labelPosition = 'left';\n        this._speed = 'noticeable';\n        this._starType = 'svg';\n        this._assetsPath = 'assets/images/';\n        this._svgPath = this.assetsPath + 'star-rating.icons.svg';\n        this._svgEmptySymbolId = 'star-empty';\n        this._svgHalfSymbolId = 'star-half';\n        this._svgFilledSymbolId = 'star-filled';\n        this._svgPathEmpty = this.svgPath + '#' + this.svgEmptySymbolId;\n        this._svgPathHalf = this.svgPath + '#' + this.svgHalfSymbolId;\n        this._svgPathFilled = this.svgPath + '#' + this.svgFilledSymbolId;\n    }\n    get classEmpty() {\n        return this._classEmpty;\n    }\n    set classEmpty(classEmpty) {\n        this._classEmpty = classEmpty;\n    }\n    get classHalf() {\n        return this._classHalf;\n    }\n    set classHalf(classHalf) {\n        this._classHalf = classHalf;\n    }\n    get classFilled() {\n        return this._classFilled;\n    }\n    set classFilled(classFilled) {\n        this._classFilled = classFilled;\n    }\n    get numOfStars() {\n        return this._numOfStars;\n    }\n    set numOfStars(numOfStars) {\n        this._numOfStars = numOfStars;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(size) {\n        this._size = size;\n    }\n    get staticColor() {\n        return this._staticColor;\n    }\n    set staticColor(value) {\n        this._staticColor = value;\n    }\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(labelPosition) {\n        this._labelPosition = labelPosition;\n    }\n    get speed() {\n        return this._speed;\n    }\n    set speed(speed) {\n        this._speed = speed;\n    }\n    get starType() {\n        return this._starType;\n    }\n    set starType(starType) {\n        this._starType = starType;\n    }\n    get assetsPath() {\n        return this._assetsPath;\n    }\n    set assetsPath(assetsPath) {\n        this._assetsPath = assetsPath;\n    }\n    get svgPath() {\n        return this._svgPath;\n    }\n    set svgPath(svgPath) {\n        this._svgPath = svgPath;\n    }\n    get svgEmptySymbolId() {\n        return this._svgEmptySymbolId;\n    }\n    set svgEmptySymbolId(svgEmptySymbolId) {\n        this._svgEmptySymbolId = svgEmptySymbolId;\n    }\n    get svgHalfSymbolId() {\n        return this._svgHalfSymbolId;\n    }\n    set svgHalfSymbolId(svgHalfSymbolId) {\n        this._svgHalfSymbolId = svgHalfSymbolId;\n    }\n    get svgFilledSymbolId() {\n        return this._svgFilledSymbolId;\n    }\n    set svgFilledSymbolId(svgFilledSymbolId) {\n        this._svgFilledSymbolId = svgFilledSymbolId;\n    }\n    get svgPathEmpty() {\n        return this._svgPathEmpty;\n    }\n    set svgPathEmpty(svgPathEmpty) {\n        this._svgPathEmpty = svgPathEmpty;\n    }\n    get svgPathHalf() {\n        return this._svgPathHalf;\n    }\n    set svgPathHalf(svgPathHalf) {\n        this._svgPathHalf = svgPathHalf;\n    }\n    get svgPathFilled() {\n        return this._svgPathFilled;\n    }\n    set svgPathFilled(svgPathFilled) {\n        this._svgPathFilled = svgPathFilled;\n    }\n    getColor(rating, numOfStars, staticColor) {\n        rating = rating || 0;\n        // if a fix color is set use this one\n        if (staticColor) {\n            return staticColor;\n        }\n        // calculate size of smallest fraction\n        const fractionSize = numOfStars / 3;\n        // apply color by fraction\n        let color = 'default';\n        if (rating > 0) {\n            color = 'negative';\n        }\n        if (rating > fractionSize) {\n            color = 'ok';\n        }\n        if (rating > fractionSize * 2) {\n            color = 'positive';\n        }\n        return color;\n    }\n    getHalfStarVisible(rating) {\n        return Math.abs(rating % 1) > 0;\n    }\n}\n\n/* eslint-disable @angular-eslint/component-class-suffix */\nclass StarRating {\n    constructor(config) {\n        this.config = config;\n        //set default ctrl props\n        this.classEmpty = this.config.classEmpty;\n        this.classHalf = this.config.classHalf;\n        this.classFilled = this.config.classFilled;\n        this.pathEmpty = this.config.svgPathEmpty;\n        this.pathHalf = this.config.svgPathHalf;\n        this.pathFilled = this.config.svgPathFilled;\n        //set default Component Inputs\n        if ('getColor' in this.config &&\n            typeof this.config.getColor === 'function') {\n            this.getColor = this.config.getColor;\n        }\n        if ('getHalfStarVisible' in this.config &&\n            typeof this.config.getHalfStarVisible === 'function') {\n            this.getHalfStarVisible = this.config.getHalfStarVisible;\n        }\n        this.numOfStars = this.config.numOfStars;\n        this.rating = 0;\n        this.step = 1;\n    }\n    get showHalfStars() {\n        return this._showHalfStars;\n    }\n    set showHalfStars(value) {\n        this._showHalfStars = !!value;\n        //update halfStarVisible\n        this.setHalfStarVisible();\n    }\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || '';\n    }\n    get focus() {\n        return this._focus;\n    }\n    set focus(value) {\n        this._focus = !!value;\n    }\n    get labelText() {\n        return this._labelText;\n    }\n    set labelText(value) {\n        this._labelText = value;\n    }\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(value) {\n        this._labelPosition = value || this.config.labelPosition;\n    }\n    get labelVisible() {\n        return this._labelVisible;\n    }\n    set labelVisible(value) {\n        this._labelVisible = !!value;\n    }\n    get hoverEnabled() {\n        return this._hoverEnabled;\n    }\n    set hoverEnabled(value) {\n        this._hoverEnabled = value !== undefined ? !!value : false;\n    }\n    get staticColor() {\n        return this._staticColor || this.config.staticColor || undefined;\n    }\n    set staticColor(value) {\n        this._staticColor = value;\n        //update color.\n        this.setColor();\n    }\n    get direction() {\n        return this._direction;\n    }\n    set direction(value) {\n        this._direction = value || undefined;\n    }\n    get numOfStars() {\n        return this._numOfStars;\n    }\n    set numOfStars(value) {\n        this._numOfStars = value > 0 ? value : this.config.numOfStars;\n        //update stars array\n        this.stars = StarRatingUtils.getStarsArray(this.numOfStars);\n        //update color\n        this.setColor();\n    }\n    get hoverRating() {\n        return this._hoverRating;\n    }\n    set hoverRating(value) {\n        this._hoverRating = value > 0 ? value : 0;\n    }\n    get speed() {\n        return this._speed;\n    }\n    set speed(value) {\n        this._speed = value || this.config.speed;\n    }\n    get size() {\n        return this._size || this.config.size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get starType() {\n        return this._starType || this.config.starType;\n    }\n    set starType(value) {\n        this._starType = value;\n    }\n    get space() {\n        return this._space;\n    }\n    set space(value) {\n        this._space = value;\n    }\n    get readOnly() {\n        return this._readOnly;\n    }\n    set readOnly(value) {\n        this._readOnly = !!value;\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = !!value;\n    }\n    get step() {\n        return this._step;\n    }\n    set step(value) {\n        this._step = value > 0 ? value : 1;\n    }\n    get rating() {\n        return this._rating;\n    }\n    set rating(value) {\n        this.setRating(value);\n    }\n    /**\n     * setRating\n     * I use a setter function instead of a set method to enable overrides for this function.\n     * @param value\n     */\n    setRating(value) {\n        //validate and apply newRating\n        let newRating = 0;\n        if (value >= 0 && value <= this.numOfStars) {\n            newRating = value;\n        }\n        //limit max value to max number of stars\n        if (value > this.numOfStars) {\n            newRating = this.numOfStars;\n        }\n        this._rating = newRating;\n        //update ratingAsInteger. rating parsed to int for the value-[n] modifier\n        this.ratingAsInteger = parseInt(this._rating?.toString(), 10);\n        //update halfStarsVisible\n        this.setHalfStarVisible();\n        //update calculated Color\n        this.setColor();\n    }\n    svgVisible() {\n        return this.starType === 'svg';\n    }\n    interactionPossible() {\n        return !this.readOnly && !this.disabled;\n    }\n    setColor(useHoverValue = false) {\n        //check if custom function is given\n        const ratingValue = useHoverValue ? this.hoverRating : this.rating;\n        if (typeof this.getColor === 'function') {\n            this.color = this.getColor(ratingValue, this.numOfStars, this.staticColor);\n        }\n        else {\n            this.color = StarRatingUtils.getColor(ratingValue, this.numOfStars, this.staticColor);\n        }\n    }\n    setHalfStarVisible() {\n        //update halfStarVisible\n        if (this.showHalfStars) {\n            //check if custom function is given\n            if (typeof this.getHalfStarVisible === 'function') {\n                this.halfStarVisible = this.getHalfStarVisible(this.rating);\n            }\n            else {\n                this.halfStarVisible = StarRatingUtils.getHalfStarVisible(this.rating);\n            }\n        }\n        else {\n            this.halfStarVisible = false;\n        }\n    }\n    getComponentClassNames() {\n        const classNames = [];\n        classNames.push(this.rating ? 'value-' + this.ratingAsInteger : 'value-0');\n        classNames.push(this.halfStarVisible ? 'half' : '');\n        classNames.push(this.hoverEnabled ? 'hover' : '');\n        const hoverRating = this.hoverRating\n            ? 'hover-' + this.hoverRating\n            : 'hover-0';\n        classNames.push(this.hoverEnabled ? hoverRating : '');\n        classNames.push(this.space ? 'space-' + this.space : '');\n        classNames.push(this.labelPosition ? 'label-' + this.labelPosition : '');\n        classNames.push(this.color ? 'color-' + this.color : '');\n        classNames.push(this.starType ? 'star-' + this.starType : '');\n        classNames.push(this.speed);\n        classNames.push(this.size);\n        classNames.push(this.readOnly ? 'read-only' : '');\n        classNames.push(this.disabled ? 'disabled' : '');\n        classNames.push(this.direction ? 'direction-' + this.direction : '');\n        return classNames.join(' ');\n    }\n    increment() {\n        //increment to next higher step\n        const absDiff = Math.abs(this.rating % this.step);\n        this.rating = this.rating + (absDiff > 0 ? this.step - absDiff : this.step);\n    }\n    decrement() {\n        //decrement to next lower step\n        const absDiff = Math.abs(this.rating % this.step);\n        this.rating = this.rating - (absDiff > 0 ? absDiff : this.step);\n    }\n    reset() {\n        this.rating = 0;\n    }\n}\nStarRating.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRating, deps: [{ token: StarRatingConfigService }], target: i0.ɵɵFactoryTarget.Component });\nStarRating.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.0\", type: StarRating, selector: \"placeholder-star-rating\", inputs: { showHalfStars: \"showHalfStars\", id: \"id\", focus: \"focus\", labelText: \"labelText\", labelPosition: \"labelPosition\", labelVisible: \"labelVisible\", hoverEnabled: \"hoverEnabled\", staticColor: \"staticColor\", direction: \"direction\", numOfStars: \"numOfStars\", hoverRating: \"hoverRating\", speed: \"speed\", size: \"size\", starType: \"starType\", space: \"space\", readOnly: \"readOnly\", disabled: \"disabled\", step: \"step\", rating: \"rating\" }, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRating, decorators: [{\n            type: Component,\n            args: [{\n                    // Metadata needed for Angular.\n                    template: ``,\n                    selector: 'placeholder-star-rating'\n                }]\n        }], ctorParameters: function () { return [{ type: StarRatingConfigService }]; }, propDecorators: { showHalfStars: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], focus: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], labelVisible: [{\n                type: Input\n            }], hoverEnabled: [{\n                type: Input\n            }], staticColor: [{\n                type: Input\n            }], direction: [{\n                type: Input\n            }], numOfStars: [{\n                type: Input\n            }], hoverRating: [{\n                type: Input\n            }], speed: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], starType: [{\n                type: Input\n            }], space: [{\n                type: Input\n            }], readOnly: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], rating: [{\n                type: Input\n            }] } });\n\nclass StarRatingComponent extends StarRating {\n    constructor(config) {\n        super(config);\n        this.starClickChange = new EventEmitter();\n        this.ratingChange = new EventEmitter();\n        this.hoverRatingChange = new EventEmitter();\n    }\n    saveOnClick($event) {\n        if (this.starClickChange) {\n            this.starClickChange.emit($event);\n        }\n    }\n    saveOnRatingChange($event) {\n        if (this.ratingChange) {\n            this.ratingChange.emit($event);\n        }\n    }\n    saveOnHover($event) {\n        if (this.hoverRatingChange) {\n            this.hoverRatingChange.emit($event);\n        }\n    }\n    /**ACCESSIBILITY **/\n    //Keyboard events\n    onKeyDown(event) {\n        if (!this.interactionPossible()) {\n            return;\n        }\n        const handlers = {\n            //Decrement\n            Minus: () => this.decrement(),\n            ArrowDown: () => this.decrement(),\n            ArrowLeft: () => this.decrement(),\n            //Increment\n            Plus: () => this.increment(),\n            ArrowRight: () => this.increment(),\n            ArrowUp: () => this.increment(),\n            //Reset\n            Backspace: () => this.reset(),\n            Delete: () => this.reset(),\n            Digit0: () => this.reset(),\n        };\n        const handleDigits = (eventCode) => {\n            const dStr = 'Digit';\n            const digit = parseInt(eventCode.substr(dStr.length, eventCode.length - 1), 10);\n            this.rating = digit;\n        };\n        if (handlers[event['code']] ||\n            StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n            if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n                handleDigits(event['code']);\n            }\n            else {\n                handlers[event['code']]();\n            }\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    //Hover events\n    onStarHover(rating) {\n        if (!this.interactionPossible() || !this.hoverEnabled) {\n            return;\n        }\n        this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\n        //update calculated Color\n        this.setColor(true);\n        //fire onHoverRatingChange event\n        const $event = { hoverRating: this.hoverRating };\n        this.saveOnHover($event);\n    }\n    onStopHover() {\n        if (!this.interactionPossible() || !this.hoverEnabled) {\n            return;\n        }\n        this.hoverRating = 0;\n        //update calculated Color\n        this.setColor();\n    }\n    //Overrides\n    setRating(value) {\n        const initValue = this.rating;\n        super.setRating(value);\n        //if value changed trigger valueAccessor events and outputs\n        if (initValue !== this.rating) {\n            const $event = { rating: this.rating };\n            this.saveOnRatingChange($event);\n        }\n    }\n    /**\n     * onStarClicked\n     *\n     * Is fired when a star is clicked. And updated the rating value.\n     * This function returns if the disabled or readOnly\n     * property is set. If provided it emits the onClick event\n     * handler with the actual rating value.\n     *\n     * @param rating\n     */\n    onStarClicked(rating) {\n        //fire onClick event\n        if (!this.interactionPossible()) {\n            return;\n        }\n        this.rating = rating;\n        const onClickEventObject = {\n            rating: this.rating,\n        };\n        this.saveOnClick(onClickEventObject);\n    }\n}\nStarRatingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingComponent, deps: [{ token: StarRatingConfigService }], target: i0.ɵɵFactoryTarget.Component });\nStarRatingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.0\", type: StarRatingComponent, selector: \"star-rating\", inputs: { getHalfStarVisible: \"getHalfStarVisible\", getColor: \"getColor\" }, outputs: { starClickChange: \"starClickChange\", ratingChange: \"ratingChange\", hoverRatingChange: \"hoverRatingChange\" }, usesInheritance: true, ngImport: i0, template: \"<div id=\\\"{{id}}\\\" class=\\\"rating {{getComponentClassNames()}}\\\" tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\" (mouseleave)=\\\"onStopHover()\\\">\\n  <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n  <div class=\\\"star-container\\\">\\n    <div class=\\\"star\\\" (mouseenter)=\\\"onStarHover(star)\\\"\\n      *ngFor=\\\"let star of stars\\\" (click)=\\\"onStarClicked(star)\\\">\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'star-rating', template: \"<div id=\\\"{{id}}\\\" class=\\\"rating {{getComponentClassNames()}}\\\" tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\" (mouseleave)=\\\"onStopHover()\\\">\\n  <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n  <div class=\\\"star-container\\\">\\n    <div class=\\\"star\\\" (mouseenter)=\\\"onStarHover(star)\\\"\\n      *ngFor=\\\"let star of stars\\\" (click)=\\\"onStarClicked(star)\\\">\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: StarRatingConfigService }]; }, propDecorators: { getHalfStarVisible: [{\n                type: Input\n            }], getColor: [{\n                type: Input\n            }], starClickChange: [{\n                type: Output\n            }], ratingChange: [{\n                type: Output\n            }], hoverRatingChange: [{\n                type: Output\n            }] } });\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst STAR_RATING_CONTROL_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => StarRatingControlComponent),\n    multi: true,\n};\nclass StarRatingControlComponent extends StarRating {\n    constructor(config) {\n        super(config);\n        this.starClickChange = new EventEmitter();\n        this.ratingChange = new EventEmitter();\n        this.hoverRatingChange = new EventEmitter();\n        this.onModelChangeRegistered = false;\n        this.onTouchRegistered = false;\n    }\n    saveOnClick($event) {\n        if (this.starClickChange) {\n            this.starClickChange.emit($event);\n        }\n    }\n    saveOnRatingChange($event) {\n        if (this.ratingChange) {\n            this.ratingChange.emit($event);\n        }\n    }\n    saveOnHover($event) {\n        if (this.hoverRatingChange) {\n            this.hoverRatingChange.emit($event);\n        }\n    }\n    saveOnTouch() {\n        if (this.onTouchRegistered) {\n            this.onTouch();\n        }\n    }\n    saveOnModelChange(value) {\n        if (this.onModelChangeRegistered) {\n            this.onModelChange(value);\n        }\n    }\n    /**ACCESSIBILITY **/\n    //Keyboard events\n    onKeyDown(event) {\n        if (!this.interactionPossible()) {\n            return;\n        }\n        const handlers = {\n            //Decrement\n            Minus: () => this.decrement(),\n            ArrowDown: () => this.decrement(),\n            ArrowLeft: () => this.decrement(),\n            //Increment\n            Plus: () => this.increment(),\n            ArrowRight: () => this.increment(),\n            ArrowUp: () => this.increment(),\n            //Reset\n            Backspace: () => this.reset(),\n            Delete: () => this.reset(),\n            Digit0: () => this.reset(),\n        };\n        const handleDigits = (eventCode) => {\n            const dStr = 'Digit';\n            const digit = parseInt(eventCode.substr(dStr.length, eventCode.length - 1), 10);\n            this.rating = digit;\n        };\n        if (handlers[event['code']] ||\n            StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n            if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\n                handleDigits(event['code']);\n            }\n            else {\n                handlers[event['code']]();\n            }\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        this.saveOnTouch();\n    }\n    //Focus events\n    onBlur(event) {\n        this.focus = false;\n        event.preventDefault();\n        event.stopPropagation();\n        this.saveOnTouch();\n    }\n    onFocus(event) {\n        this.focus = true;\n        event.preventDefault();\n        event.stopPropagation();\n        this.saveOnTouch();\n    }\n    //Hover events\n    onStarHover(rating) {\n        if (!this.interactionPossible() || !this.hoverEnabled) {\n            return;\n        }\n        this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\n        //fire onHoverRatingChange event\n        const $event = { hoverRating: this.hoverRating };\n        this.saveOnHover($event);\n    }\n    /**Form Control - ControlValueAccessor implementation**/\n    writeValue(obj) {\n        this.rating = obj;\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n        this.onModelChangeRegistered = true;\n    }\n    registerOnTouched(fn) {\n        this.onTouch = fn;\n        this.onTouchRegistered = true;\n    }\n    //Overrides\n    setRating(value) {\n        const initValue = this.rating;\n        super.setRating(value);\n        //if value changed trigger valueAccessor events and outputs\n        if (initValue !== this.rating) {\n            const $event = { rating: this.rating };\n            this.saveOnRatingChange($event);\n            this.saveOnModelChange(this.rating);\n        }\n    }\n    /**\n     * onStarClicked\n     *\n     * Is fired when a star is clicked. And updated the rating value.\n     * This function returns if the disabled or readOnly\n     * property is set. If provided it emits the onClick event\n     * handler with the actual rating value.\n     *\n     * @param rating\n     */\n    onStarClicked(rating) {\n        //fire onClick event\n        if (!this.interactionPossible()) {\n            return;\n        }\n        this.rating = rating;\n        const onClickEventObject = {\n            rating: this.rating,\n        };\n        this.saveOnClick(onClickEventObject);\n    }\n}\nStarRatingControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingControlComponent, deps: [{ token: StarRatingConfigService }], target: i0.ɵɵFactoryTarget.Component });\nStarRatingControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.0\", type: StarRatingControlComponent, selector: \"star-rating-control\", outputs: { starClickChange: \"starClickChange\", ratingChange: \"ratingChange\", hoverRatingChange: \"hoverRatingChange\" }, providers: [STAR_RATING_CONTROL_ACCESSOR], usesInheritance: true, ngImport: i0, template: \"<div id=\\\"{{id}}\\\" class=\\\"rating {{getComponentClassNames()}}\\\" tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\" (blur)=\\\"onBlur($event)\\\"\\n  (focus)=\\\"onFocus($event)\\\" (mouseleave)=\\\"onStarHover(0)\\\">\\n  <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n  <div class=\\\"star-container\\\">\\n    <div class=\\\"star\\\" (mouseenter)=\\\"onStarHover(star)\\\"\\n      *ngFor=\\\"let star of stars\\\" (click)=\\\"onStarClicked(star)\\\">\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingControlComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'star-rating-control', providers: [STAR_RATING_CONTROL_ACCESSOR], template: \"<div id=\\\"{{id}}\\\" class=\\\"rating {{getComponentClassNames()}}\\\" tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\" (blur)=\\\"onBlur($event)\\\"\\n  (focus)=\\\"onFocus($event)\\\" (mouseleave)=\\\"onStarHover(0)\\\">\\n  <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n  <div class=\\\"star-container\\\">\\n    <div class=\\\"star\\\" (mouseenter)=\\\"onStarHover(star)\\\"\\n      *ngFor=\\\"let star of stars\\\" (click)=\\\"onStarClicked(star)\\\">\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n      <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n      </svg>\\n      <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n        <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: StarRatingConfigService }]; }, propDecorators: { starClickChange: [{\n                type: Output\n            }], ratingChange: [{\n                type: Output\n            }], hoverRatingChange: [{\n                type: Output\n            }] } });\n\nconst DECLARATIONS = [StarRatingComponent, StarRatingControlComponent];\nconst EXPORTS = [DECLARATIONS];\nclass StarRatingModule {\n    static forRoot() {\n        return {\n            ngModule: StarRatingModule,\n            providers: [StarRatingConfigService],\n        };\n    }\n    static forChild() {\n        return {\n            ngModule: StarRatingModule,\n            providers: [],\n        };\n    }\n}\nStarRatingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nStarRatingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingModule, declarations: [StarRatingComponent, StarRatingControlComponent], imports: [CommonModule], exports: [StarRatingComponent, StarRatingControlComponent] });\nStarRatingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: StarRatingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [DECLARATIONS],\n                    exports: [EXPORTS],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { StarRating, StarRatingComponent, StarRatingConfig, StarRatingConfigService, StarRatingControlComponent, StarRatingModule, StarRatingUtils };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}